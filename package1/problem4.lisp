(defvar res NIL)
(defvar aux NIL)
(defvar aux2 NIL)
(defun recombina
    (l1)
    (push (cdr (nth 2 l1)) aux)
    (push (cdr (nth 1 l1)) aux)
    (push (cdr (nth 0 l1)) aux)
    (setq aux2 (nth 0 (nth 1 l1)))
    (push (cons aux aux2) res)
    (setq aux NIL)
    (push (cdr (nth 2 l1)) aux)
    (push (cdr (nth 1 l1)) aux)
    (setq aux2 (nth 0 (nth 2 l1)))
    (push (cons aux aux2) res)
    (setq aux NIL)
    (push (cdr (nth 1 l1)) aux)
    (push (cdr (nth 0 l1)) aux)
    (setq aux2 (nth 0 (nth 0 l1)))
    (push (cons aux aux2) res)
    
)
(format T "~d ~%" (recombina '((A . x) (B . y) (C . z)) ))